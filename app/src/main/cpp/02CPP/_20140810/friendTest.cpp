//// Created by sunalong on 17/3/2 20:31.// Email:466210864@qq.com///** * 用于测试拷贝构造函数 * 同一份代码不同的平台、不同的编译器产生的结果不同 */#include <iostream>using namespace std;class Demo{private:    int id;public:    Demo(){        cout<<"Demo 构造函数 addr:"<<this<<endl;    }    Demo(const Demo &itself){        cout<<"Demo 拷贝构造函数 addr:"<<this<<endl;    }    ~Demo(){        cout<<"Demo 析构函数 addr:"<<this<<endl;    }    int getId() const {        return id;    }    void setId(int id) {        Demo::id = id;    }    friend void testFriend();//意思是声明一个该类的友元函数    friend class Demo2;//声明 Demo2是 Demo 的友元类};class Demo2{public:    Demo2(){        cout<<"Demo2 构造函数 addr:"<<this<<endl;        Demo d;        d.id = 101;        cout<<"Demo2 中访问 Demo中的私有成员 id:"<<d.id<<endl;    }};void testFriend(){//此方法可任意访问 Demo 类中的任意成员    Demo d ;    cout<<"友元函数访问类的私有变量 Demo id:"<<d.id<<endl;}//Demo test(){//在某些平台、编译器可能会没有拷贝构造函数Demo &test(){//拷贝构造函数    Demo d ;    return d;}int main(){    Demo d = test();    cout<<"Hello world"<<endl;    testFriend();    Demo2 d2;    return 0;}